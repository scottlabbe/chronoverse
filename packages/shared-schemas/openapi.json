{
  "components": {
    "schemas": {
      "FeedbackContext": {
        "properties": {
          "format": {
            "anyOf": [
              {
                "enum": [
                  "12h",
                  "24h",
                  "auto"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Format"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "poem": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Poem"
          },
          "theme": {
            "anyOf": [
              {
                "enum": [
                  "Paper",
                  "Stone",
                  "Ink",
                  "Slate",
                  "Mist"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Theme"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "tone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          },
          "version": {
            "anyOf": [
              {
                "enum": [
                  "Gallery",
                  "Manuscript",
                  "Zen"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          }
        },
        "title": "FeedbackContext",
        "type": "object"
      },
      "FeedbackRequest": {
        "properties": {
          "context": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackContext"
              },
              {
                "type": "null"
              }
            ]
          },
          "includeContext": {
            "default": true,
            "title": "Includecontext",
            "type": "boolean"
          },
          "message": {
            "maxLength": 4000,
            "minLength": 1,
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "title": "FeedbackRequest",
        "type": "object"
      },
      "FeedbackResponse": {
        "properties": {
          "emailed": {
            "title": "Emailed",
            "type": "boolean"
          },
          "logged": {
            "title": "Logged",
            "type": "boolean"
          },
          "ok": {
            "title": "Ok",
            "type": "boolean"
          }
        },
        "required": [
          "ok",
          "emailed",
          "logged"
        ],
        "title": "FeedbackResponse",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "PoemRequest": {
        "properties": {
          "forceNew": {
            "default": false,
            "title": "Forcenew",
            "type": "boolean"
          },
          "format": {
            "default": "auto",
            "enum": [
              "12h",
              "24h",
              "auto"
            ],
            "title": "Format",
            "type": "string"
          },
          "locale": {
            "default": "en-US",
            "title": "Locale",
            "type": "string"
          },
          "timezone": {
            "default": "America/Chicago",
            "title": "Timezone",
            "type": "string"
          },
          "tone": {
            "default": "Wistful",
            "enum": [
              "Whimsical",
              "Wistful",
              "Funny",
              "Noir",
              "Minimal",
              "Cosmic",
              "Nature",
              "Romantic",
              "Spooky"
            ],
            "title": "Tone",
            "type": "string"
          }
        },
        "title": "PoemRequest",
        "type": "object"
      },
      "PoemResponse": {
        "properties": {
          "cached": {
            "default": false,
            "title": "Cached",
            "type": "boolean"
          },
          "completion_tokens": {
            "default": 0,
            "title": "Completion Tokens",
            "type": "integer"
          },
          "cost_usd": {
            "default": 0.0,
            "title": "Cost Usd",
            "type": "number"
          },
          "daypart": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Daypart"
          },
          "generated_at_iso": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated At Iso"
          },
          "latency_ms": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency Ms"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "params_used": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Params Used"
          },
          "poem": {
            "title": "Poem",
            "type": "string"
          },
          "prompt_tokens": {
            "default": 0,
            "title": "Prompt Tokens",
            "type": "integer"
          },
          "reasoning_tokens": {
            "default": 0,
            "title": "Reasoning Tokens",
            "type": "integer"
          },
          "request_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Request Id"
          },
          "response_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Id"
          },
          "retry_count": {
            "default": 0,
            "title": "Retry Count",
            "type": "integer"
          },
          "status": {
            "default": "ok",
            "enum": [
              "ok",
              "fallback",
              "error"
            ],
            "title": "Status",
            "type": "string"
          },
          "time_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time Used"
          },
          "timezone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timezone"
          },
          "tone": {
            "anyOf": [
              {
                "enum": [
                  "Whimsical",
                  "Wistful",
                  "Funny",
                  "Noir",
                  "Minimal",
                  "Cosmic",
                  "Nature",
                  "Romantic",
                  "Spooky"
                ],
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tone"
          }
        },
        "required": [
          "poem"
        ],
        "title": "PoemResponse",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "The Present Verse",
    "version": "1.2"
  },
  "openapi": "3.1.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "index__get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Index"
      }
    },
    "/api/_db/health": {
      "get": {
        "description": "Lightweight DB probe. Optionally protected by X-Health-Token when HEALTH_TOKEN is set.",
        "operationId": "db_health_api__db_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Db Health"
      }
    },
    "/api/billing/checkout": {
      "post": {
        "operationId": "checkout_stub_api_billing_checkout_post",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Checkout Stub"
      }
    },
    "/api/billing/portal": {
      "get": {
        "operationId": "billing_portal_api_billing_portal_get",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Portal"
      }
    },
    "/api/billing/status": {
      "get": {
        "description": "Return the server's view of the user's subscription row (for debugging/UX).",
        "operationId": "billing_status_api_billing_status_get",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Status"
      }
    },
    "/api/billing/verify": {
      "get": {
        "description": "Fallback verification when returning from Stripe Checkout.\nIdempotently upserts subscription based on the Checkout Session.\nRequires auth and the session must reference the current user.",
        "operationId": "billing_verify_api_billing_verify_get",
        "parameters": [
          {
            "in": "query",
            "name": "session_id",
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Billing Verify"
      }
    },
    "/api/billing/webhook": {
      "post": {
        "operationId": "stripe_webhook_api_billing_webhook_post",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Stripe Webhook"
      }
    },
    "/api/feedback": {
      "post": {
        "operationId": "post_feedback_api_feedback_post",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Post Feedback"
      }
    },
    "/api/me": {
      "get": {
        "operationId": "me_api_me_get",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Me"
      }
    },
    "/api/poem": {
      "post": {
        "operationId": "post_poem_api_poem_post",
        "parameters": [
          {
            "in": "header",
            "name": "authorization",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PoemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoemResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Post Poem"
      }
    },
    "/api/v2/poem": {
      "post": {
        "operationId": "post_poem_mobile_api_v2_poem_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Mobile-Api-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Mobile-Api-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PoemRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PoemResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Post Poem Mobile"
      }
    },
    "/healthz": {
      "get": {
        "operationId": "healthz_healthz_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Healthz"
      }
    },
    "/manifest.webmanifest": {
      "get": {
        "operationId": "manifest_manifest_webmanifest_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Manifest"
      }
    },
    "/service-worker.js": {
      "get": {
        "operationId": "service_worker_service_worker_js_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Service Worker"
      }
    },
    "/sw.js": {
      "get": {
        "operationId": "service_worker_sw_js_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Service Worker"
      }
    },
    "/{full_path}": {
      "get": {
        "operationId": "spa__full_path__get",
        "parameters": [
          {
            "in": "path",
            "name": "full_path",
            "required": true,
            "schema": {
              "title": "Full Path",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Spa"
      }
    }
  }
}
